import tkinter as tk
from tkinter import filedialog
import pandas as pd

class CSVUploaderApp:
    def __init__(self, root):
        self.root = root
        self.root.title("CSV Uploader")

        self.file_path_label = tk.Label(root, text="No file selected")
        self.file_path_label.pack(pady=10)

        self.browse_button = tk.Button(root, text="Browse", command=self.browse_file)
        self.browse_button.pack(pady=10)

        self.variable_types = {}
        self.variable_lengths = {}
        self.types_frame = tk.Frame(root)
        self.types_frame.pack(pady=10)

        self.upload_button = tk.Button(root, text="Upload", command=self.upload_csv)
        self.upload_button.pack(pady=10)

    def browse_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("CSV files", "*.csv")])
        self.file_path_label.config(text=file_path)
        self.load_csv(file_path)

    def load_csv(self, file_path):
        try:
            df = pd.read_csv(file_path)
            self.show_variable_types(df)
        except pd.errors.EmptyDataError:
            print("Selected file is empty.")

    def show_variable_types(self, df):
        for widget in self.types_frame.winfo_children():
            widget.destroy()

        for column in df.columns:
            label = tk.Label(self.types_frame, text=column)
            label.grid(row=0, column=df.columns.get_loc(column))

            variable_type = tk.StringVar(self.root)
            variable_type.set("VARCHAR")
            options = ["VARCHAR", "DATE", "CHAR"]

            dropdown = tk.OptionMenu(self.types_frame, variable_type, *options)
            dropdown.grid(row=1, column=df.columns.get_loc(column))

            if variable_type.get() == "VARCHAR":
                length_entry = tk.Entry(self.types_frame, width=5)
                length_entry.grid(row=2, column=df.columns.get_loc(column))
                self.variable_lengths[column] = length_entry

            self.variable_types[column] = variable_type

    def upload_csv(self):
        file_path = self.file_path_label.cget("text")

        if file_path == "No file selected":
            print("Please select a CSV file.")
            return

        variable_types = {column: var.get() for column, var in self.variable_types.items()}
        variable_lengths = {column: entry.get() for column, entry in self.variable_lengths.items()}

        print("File Path:", file_path)
        print("Variable Types:", variable_types)
        print("Variable Lengths:", variable_lengths)

if __name__ == "__main__":
    root = tk.Tk()
    app = CSVUploaderApp(root)
    root.mainloop()
